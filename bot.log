{"time": "2025-08-11T02:45:34+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T02:45:34+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 74, in _request\n    kwargs = self._get_request_kwargs(method, signed, force_params, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 477, in _get_request_kwargs\n    kwargs[\"data\"][\"signature\"] = self._generate_signature(kwargs[\"data\"])\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 354, in _generate_signature\n    res = sig_func(query_string)\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 338, in _hmac_signature\n    assert self.API_SECRET, \"API Secret required for private endpoints\"\nAssertionError: API Secret required for private endpoints"}
{"time": "2025-08-11T02:47:23+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T02:47:23+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 74, in _request\n    kwargs = self._get_request_kwargs(method, signed, force_params, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 477, in _get_request_kwargs\n    kwargs[\"data\"][\"signature\"] = self._generate_signature(kwargs[\"data\"])\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 354, in _generate_signature\n    res = sig_func(query_string)\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 338, in _hmac_signature\n    assert self.API_SECRET, \"API Secret required for private endpoints\"\nAssertionError: API Secret required for private endpoints"}
{"time": "2025-08-11T02:49:26+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T02:49:26+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 74, in _request\n    kwargs = self._get_request_kwargs(method, signed, force_params, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 477, in _get_request_kwargs\n    kwargs[\"data\"][\"signature\"] = self._generate_signature(kwargs[\"data\"])\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 354, in _generate_signature\n    res = sig_func(query_string)\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\base_client.py\", line 338, in _hmac_signature\n    assert self.API_SECRET, \"API Secret required for private endpoints\"\nAssertionError: API Secret required for private endpoints"}
{"time": "2025-08-11T02:51:30+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T02:51:30+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T03:05:27+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T03:05:27+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T03:06:44+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T03:06:45+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T03:08:16+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T03:08:16+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T03:11:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T03:11:14+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T03:13:01+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T03:13:01+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\intern_project\\venv\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T08:56:59+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T08:57:00+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T09:01:18+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:01:19+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2015): Invalid API-key, IP, or permissions for action"}
{"time": "2025-08-11T09:18:05+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:18:05+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:19:07+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:19:07+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:21:12+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:21:12+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:22:16+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:22:16+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:24:02+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:24:03+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:25:31+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:25:31+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:27:24+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:27:24+0530", "level": "ERROR", "module": "__main__", "message": "Market order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\market_orders.py\", line 15, in place_market_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1022): Signature for this request is not valid."}
{"time": "2025-08-11T09:31:40+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:31:41+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order_result', 'response': {'orderId': 5566235877, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJdbfe817a8fa083d7321b03', 'price': '0.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'MARKET', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'MARKET', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754884900820}}"}
{"time": "2025-08-11T09:34:37+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 61000.0}"}
{"time": "2025-08-11T09:34:37+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566247932, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJa60e6548cb477824b30748', 'price': '61000.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885076865}}"}
{"time": "2025-08-11T09:36:10+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'stop_limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'stop_price': 59000.0, 'limit_price': 58800.0}"}
{"time": "2025-08-11T09:36:11+0530", "level": "ERROR", "module": "__main__", "message": "Stop-Limit order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\stop_limit_orders.py\", line 30, in place_stop_limit_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-1116): Invalid orderType."}
{"time": "2025-08-11T09:38:43+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'stop_limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'stop_price': 59000.0, 'limit_price': 58800.0}"}
{"time": "2025-08-11T09:38:44+0530", "level": "ERROR", "module": "__main__", "message": "Stop-Limit order failed", "exception": "Traceback (most recent call last):\n  File \"C:\\Users\\Sonali Yadav\\intern_project_2\\src\\stop_limit_orders.py\", line 30, in place_stop_limit_order\n    order = client.futures_create_order(\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 7659, in futures_create_order\n    return self._request_futures_api(\"post\", \"order\", True, data=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 126, in _request_futures_api\n    return self._request(method, uri, signed, force_params, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 89, in _request\n    return self._handle_response(self.response)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Sonali Yadav\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\binance\\client.py\", line 98, in _handle_response\n    raise BinanceAPIException(response, response.status_code, response.text)\nbinance.exceptions.BinanceAPIException: APIError(code=-2021): Order would immediately trigger."}
{"time": "2025-08-11T09:42:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'stop_limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'stop_price': 122000.0, 'limit_price': 121900.0}"}
{"time": "2025-08-11T09:42:15+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'stop_limit_order_result', 'response': {'orderId': 5566279446, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ9558142cb375cd5d7418e9', 'price': '121900.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'STOP', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '122000.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'STOP', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885534360}}"}
{"time": "2025-08-11T09:44:27+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'oco_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'take_profit_price': 123000.0, 'stop_price': 119000.0, 'stop_limit_price': 118500.0}"}
{"time": "2025-08-11T09:44:28+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'oco_take_profit_order', 'response': {'orderId': 5566288286, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ906151ffb51099c69a474e', 'price': '123000.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885667611}}"}
{"time": "2025-08-11T09:44:28+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'oco_stop_loss_order', 'response': {'orderId': 5566288298, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ9985848b5f209f82f70ca', 'price': '118500.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'STOP', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '119000.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'STOP', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885668110}}"}
{"time": "2025-08-11T09:47:03+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'twap_order_start', 'symbol': 'BTCUSDT', 'side': 'BUY', 'total_qty': 0.05, 'duration_sec': 300, 'intervals': 5, 'qty_per_order': 0.01, 'interval_delay': 60.0}"}
{"time": "2025-08-11T09:47:03+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:47:03+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order_result', 'response': {'orderId': 5566297394, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ24c9d2f89b45969ec88e89', 'price': '0.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'MARKET', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'MARKET', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885823086}}"}
{"time": "2025-08-11T09:48:03+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:48:04+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order_result', 'response': {'orderId': 5566301684, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJa3946a576ba203d96901df', 'price': '0.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'MARKET', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'MARKET', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885883443}}"}
{"time": "2025-08-11T09:49:04+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01}"}
{"time": "2025-08-11T09:49:04+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'market_order_result', 'response': {'orderId': 5566307154, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ4fee77c156d793824c96a', 'price': '0.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'MARKET', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'MARKET', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885943730}}"}
{"time": "2025-08-11T09:49:09+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'price': 118000.0}"}
{"time": "2025-08-11T09:49:13+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566309163, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ5bfbc281952fc9fc1abd18', 'price': '118000.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885952767}}"}
{"time": "2025-08-11T09:49:13+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'price': 119200.0}"}
{"time": "2025-08-11T09:49:13+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566309274, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJfa337eceadf166f85933b2', 'price': '119200.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885953174}}"}
{"time": "2025-08-11T09:49:13+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'price': 120400.0}"}
{"time": "2025-08-11T09:49:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566309358, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJe02d83d68d4df4c2c4c103', 'price': '120400.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885953495}}"}
{"time": "2025-08-11T09:49:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'price': 121600.0}"}
{"time": "2025-08-11T09:49:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566309542, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJa30d9e5346217788712142', 'price': '121600.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885954162}}"}
{"time": "2025-08-11T09:49:14+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'BUY', 'qty': 0.01, 'price': 122800.0}"}
{"time": "2025-08-11T09:49:15+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566309833, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJc832d5688aec80145b9d88', 'price': '122800.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'BUY', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885955275}}"}
{"time": "2025-08-11T09:49:15+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 124000.0}"}
{"time": "2025-08-11T09:49:16+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566310034, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJd92a51cac451e651efb92e', 'price': '124000.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885956157}}"}
{"time": "2025-08-11T09:49:16+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 122800.0}"}
{"time": "2025-08-11T09:49:17+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566310125, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ698d3a3a2f3028356f29f0', 'price': '122800.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885957134}}"}
{"time": "2025-08-11T09:49:17+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 121600.0}"}
{"time": "2025-08-11T09:49:18+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566310133, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ123ed2c560c37aa6b96cc2', 'price': '121600.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885957847}}"}
{"time": "2025-08-11T09:49:18+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 120400.0}"}
{"time": "2025-08-11T09:49:19+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566310144, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ5c0f052eb7b1ce7bf78ce', 'price': '120400.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885958534}}"}
{"time": "2025-08-11T09:49:19+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order', 'symbol': 'BTCUSDT', 'side': 'SELL', 'qty': 0.01, 'price': 119200.0}"}
{"time": "2025-08-11T09:49:20+0530", "level": "INFO", "module": "__main__", "message": "{'action': 'limit_order_result', 'response': {'orderId': 5566310152, 'symbol': 'BTCUSDT', 'status': 'NEW', 'clientOrderId': 'x-Cb7ytekJ7a12dc82ab34ef262c0ae8', 'price': '119200.00', 'avgPrice': '0.00', 'origQty': '0.010', 'executedQty': '0.000', 'cumQty': '0.000', 'cumQuote': '0.00000', 'timeInForce': 'GTC', 'type': 'LIMIT', 'reduceOnly': False, 'closePosition': False, 'side': 'SELL', 'positionSide': 'BOTH', 'stopPrice': '0.00', 'workingType': 'CONTRACT_PRICE', 'priceProtect': False, 'origType': 'LIMIT', 'priceMatch': 'NONE', 'selfTradePreventionMode': 'EXPIRE_MAKER', 'goodTillDate': 0, 'updateTime': 1754885959551}}"}
